// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Aluno {
  id    String @id @default(uuid()) @db.Uuid
  nome  String @db.VarChar(50)
  email String @unique @db.VarChar(50)
  senha String @db.VarChar(50)

  token String?

  idade       Int?        @db.SmallInt
  endereco    Endereco?
  avalliacoes Avaliacao[]
  matriculas  Matricula[]

  dthrCriacao     DateTime @default(now()) @map("dthr_criacao")
  dthrAtualizacao DateTime @updatedAt @map("dthr_atualizacao")

  @@map("aluno")
}

model Endereco {
  idAluno String @id @map("id_aluno") @db.Uuid
  rua     String @db.VarChar(30)
  cidade  String @db.VarChar(30)
  uf      String @db.Char(2)

  aluno Aluno @relation(fields: [idAluno], references: [id])

  dthrCriacao     DateTime @default(now()) @map("dthr_criacao")
  dthrAtualizacao DateTime @updatedAt @map("dthr_atualizacao")

  @@map("endereco")
}

model Avaliacao {
  id         String  @id @default(uuid()) @db.Uuid
  disciplina String  @db.VarChar(30)
  nota       Decimal @db.Decimal(3, 1)
  idAluno    String  @map("id_aluno") @db.Uuid

  aluno Aluno @relation(fields: [idAluno], references: [id])

  dthrCriacao     DateTime @default(now()) @map("dthr_criacao")
  dthrAtualizacao DateTime @updatedAt @map("dthr_atualizacao")

  @@map("avaliacao")
}

model Turma {
  id        String @id @default(uuid()) @db.Uuid
  programa  String @db.VarChar(30)
  edicao    String @db.VarChar(30)
  maxAlunos Int?   @map("max_alunos")

  matriculas Matricula[]

  @@map("turma")
}

//N - N

model Matricula {
  idAluno String @map("id_aluno") @db.Uuid
  idTurma String @map("id_turma") @db.Uuid

  dtCriacao DateTime @default(now()) @map("dt_criacao")

  aluno Aluno @relation(fields: [idAluno], references: [id])
  turma Turma @relation(fields: [idTurma], references: [id])

  @@id([idAluno, idTurma])
  @@map("matricula")
}
